<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.admin.dao.AdminDAO">

	<resultMap id="OrderGoodsResult" type="orderGoodsVO">
		<result property="orderGoodsId" column="orderGoodsId" />
		<result property="ordersNO" column="ordersNO"/>
		<result property="goodsId" column="goodsId" />
		<result property="goodsQty" column="goodsQty" />
		<result property="goodsName" column="goodsName" />
		<result property="goodsPrice" column="goodsPrice" />
		<result property="totalPrice" column="totalPrice" />
		<result property="cartcheckin" column="cartcheckin" />
		<result property="cartcheckout" column="cartcheckout" />
		<result property="numOfTourist" column="numOfTourist" />
		<result property="orderState" column="orderState" />
		<collection property="ordercartVO" resultMap="OrdercartResult" />
	</resultMap>
	
	<!-- 오더VO 주문자에 관련된 주문정보들이 담기는곳 EX)총결제액, 쌓일포인트, 사용한포인트, 추가정보입력사항 등  -->
	<resultMap id="OrdercartResult" type="ordercartVO">
		<result property="uid" column="uid" />	
		<result property="ordererName" column="ordererName" />
		<result property="ordererPhoneNumber" column="ordererPhoneNumber" />
		<result property="creDate" column="creDate" />
		<result property="couponId" column="couponId" />
		<result property="usePoint" column="usePoint" />
		<result property="QA1" column="QA1" />
		<result property="QA2" column="QA2" />
		<result property="QA3" column="QA3" />
		<result property="savePoint" column="savePoint" />
		<result property="finalTotalPrice" column="finalTotalPrice" />
		<result property="orderState" column="orderState" />
	</resultMap>
			
	
	<resultMap id="goodsResult2" type="goodsVO">
		<result property="goodsName" column="goodsName" />
		<result property="goodsPrice" column="goodsPrice" />
		<result property="goodsCount" column="goodsCount" />
		<result property="goodsMainCategory" column="goodsMainCategory" />
		<result property="goodsSubCategory" column="goodsSubCategory" />
		<result property="goodsInfo" column="goodsInfo" />
		<result property="companyName" column="companyName" />
	    <result property="productPhoto" column="productPhoto" />
		<result property="goodsCompanyInfo" column="goodsCompanyInfo" />
		<result property="goodsImageFileName" column="goodsImageFileName" />
	</resultMap>
	
	<resultMap id="memResult" type="memberVO">
		<result property="userId" column="userId" />
		<result property="userPwd" column="userPwd" />
		<result property="userName" column="userName" />
		<result property="userBirth" column="userBirth" />
		<result property="userGender" column="userGender" />
		<result property="userType" column="userType" />
		<result property="userPhoneNumber" column="userPhoneNumber" />
		<result property="joinDate" column="joinDate"/>
		<result property="businessNumber" column="businessNumber"/>
		<result property="companyName" column="companyName"/>
		<result property="adminAllow" column="adminAllow"/>
		<result property="userPoint" column="userPoint" />
		<result property="zipcode" column="zipcode" />
		<result property="userImageFileName" column="userImageFileName" />
		<result property="roadAddress" column="roadAddress" />
		<result property="jibunAddress" column="jibunAddress" />
		<result property="extraAddress" column="extraAddress" />
		<result property="info_a" column="info_a" />
		<result property="info_b" column="info_b" />
		<result property="businessPic" column="businessPic" />
		<result property="companyNum" column="companyNum" />
		<result property="companyInfo" column="companyInfo" />
	</resultMap>

	<resultMap id="adminPointHistoryResult" type="adminPointHistoryVO">
		<result property="ordersNO" column="ordersNO" />
		<result property="uid" column="uid" />
		<result property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="usePoint" column="usePoint" />
		<result property="savePoint" column="savePoint" />
		<result property="userPoint" column="userPoint" />
		<result property="creDate" column="creDate"/>
	</resultMap>
	
	<resultMap id="boardCommentResult" type="boardCommentVO">
		<result property="articleNO" column="articleNO" />
		<result property="commentNo" column="commentNo" />
		<result property="uid" column="uid" />
		<result property="userName" column="userName" />
		<result property="commentContent" column="commentContent" />
		<result property="regDate" column="regDate" />
	</resultMap>


	<!-- 회원 주문 조회 페이지에 보낼 주문 정보 -->
	<select id="selectUserOrderList" resultMap="OrdercartResult">
	
	<![CDATA[
		 	select * from orders WHERE orderState= "취소대기" order by creDate DESC;
		 ]]>
	
	</select>
	
	
	
	<!-- 회원 주문 조회 페이지에 보낼 주문 상품 정보 -->
<select id="selectUserOrdergoodsList" resultMap="OrderGoodsResult">
	
	<![CDATA[
SELECT *
FROM (SELECT og.ordersNO, o.uid, og.goodsId, og.goodsQty, og.goodsPrice, og.goodsName, og.totalPrice, og.cartcheckin, og.cartcheckout, o.ordererName, 
o.ordererPhoneNumber, o.usePoint, o.savePoint, o.finalTotalPrice, og.orderState, o.creDate 
FROM ordersgoods AS og JOIN orders AS o ON og.ordersNO = o.ordersNO) ad WHERE ad.orderState = "취소대기" order by creDate DESC limit #{skip}, #{amount};
		 ]]>
	
	</select>

<!-- 회원 주문 조회 페이지에 보낼 주문 상품 정보 총 개수 -->
	<select id="totalAdminOrderGoodsList" resultType="int">
	
	<![CDATA[
SELECT count(*)
FROM (SELECT og.ordersNO, o.uid, og.goodsId, og.goodsQty, og.goodsPrice, og.goodsName, og.totalPrice, og.cartcheckin, og.cartcheckout, o.ordererName, 
o.ordererPhoneNumber, o.usePoint, o.savePoint, o.finalTotalPrice, og.orderState, o.creDate 
FROM ordersgoods AS og JOIN orders AS o ON og.ordersNO = o.ordersNO) ad WHERE ad.orderState = "취소대기" order by creDate DESC limit #{skip}, #{amount};
		 ]]>
	
	</select>





						<!-- 주문 취소 관련 -->
		<!-- 주문상태 취소대기에서 취소완료로 세팅 -->
	<update id="orderCancle1">
		update orders set orderState = '취소완료' where ordersNO = #{ordersNO}
	</update>	
	
	<update id="orderCancle2">
		update ordersgoods set orderState = '취소완료' where ordersNO = #{ordersNO}
	</update>
	
	<update id="orderCancle3">
		update ordersgoods set orderState = '취소완료' where ordersNO = #{ordersNO} and goodsId = #{goodsId}
	</update>
	

	<!-- 특정 주문번호에 해당하는 주문 상품 정보(주문 취소) -->
	<select id="getOrderGoodsInfo" resultMap="OrderGoodsResult">
	
		select * from ordersgoods
		where ordersNO = #{ordersNO}
	
	</select>
	
	<!-- 특정 주문번호에 해당하는 주문 정보 전부 가져오기(주문 취소) -->
	<select id="getOrder" resultMap="OrdercartResult">
	
		select * from orders
		where ordersNO = #{ordersNO}
	
	</select>
	
	<!-- 주문 건별 취소시 금액 관련 주문테이블 항목 재계산해서 업데이트 -->
	<update id="modifyOrder">
	<![CDATA[
		update orders set usePoint = #{usePoint}, savePoint = #{savePoint}, finalTotalPrice = #{finalTotalPrice} where ordersNO = #{ordersNO};
	]]>
	</update>
	
	

<!-- 취소된 상품을 주문 취소 테이블에 등록 -->
	<insert id="insertOrderRefund" parameterType="orderGoodsVO">
	
		insert into orderrefund(ordersNO, goodsId, goodsQty, goodsPrice, goodsName, totalPrice, cartcheckin, cartcheckout, numOfTourist)
		values(#{ordersNO}, #{goodsId}, #{goodsQty}, #{goodsPrice}, #{goodsName}, #{totalPrice}, #{cartcheckin}, #{cartcheckout}, #{numOfTourist})
	
	</insert>
		
<!-- 주문 취소 테이블에 추가 정보 등록 -->
	<update id="updateRefundInfo">
		update orderrefund set uid = #{uid}, ordererName = #{ordererName}, ordererPhoneNumber = #{ordererPhoneNumber} where ordersNO = #{ordersNO}
	</update>
	
	<!-- 사용자 회원 목록 긁어오기 -->
	<select id="userList" resultMap="memResult">
	
		select * from user order by joinDate DESC;
	
	</select>
	
	<!-- 사용자 회원 목록 긁어오기(페이징) -->
	<select id="userListpage" resultMap="memResult">
	
		select * from user
		where userType = 1 order by joinDate DESC limit #{skip}, #{amount};
	
	</select>
	
	
	<!-- 사업자 회원 목록 긁어오기(페이징) -->
	<select id="buserListpage" resultMap="memResult">
	
		select * from user
		where userType = 2 order by joinDate DESC limit #{skip}, #{amount};
	
	</select>
	
		<!-- 특정 사용자 회원 조회 -->
	<select id="findUserList" resultMap="memResult">
	
		 <![CDATA[
		select * from user	
	]]>
		 	<where>
		 	
		 	userType = 1 AND userName = #{search} OR userId = #{search} OR uid = #{search} OR userName = #{search} or userPhoneNumber = #{search}
		 	
		
		 	
			</where>
	</select>
	
	<!-- 승인 대기중인 사업자 회원 조회 -->
	<select id="buserAllowList" resultMap="memResult">
	
		select * from user
		where userType = 2 and adminAllow != 1 order by joinDate DESC;
	
	</select>
	
	<!-- 특정 사업자 회원 조회 -->
	<select id="findbUserList" resultMap="memResult">
		 <![CDATA[
			select * from user	
		]]>
	 	<where>
	 		userType = 2 AND userName = #{search} OR userId = #{search} OR uid = #{search} OR companyName = #{search} or userPhoneNumber = #{search} or adminAllow = #{search}
		</where>
	</select>
	
	<!-- 사용자 회원 전체 수 -->
	<select id="totalUserListPage" resultType="int">
	
		select count(*) from user where userType = 1;
	
	</select>
	
		<!-- 사업자 회원 전체 수 -->
	<select id="totalbUserListPage" resultType="int">
	
		select count(*) from user where userType = 2;
	
	</select>
	
	
<!-- 주문 전체 수 -->
	<select id="getOrderCount" resultType="int">
	
		select count(*) from orders;
	
	</select>
	
	<!-- 취소대기중인 주문 전체 수 -->
	<select id="getOrderCancelCount" resultType="int">
	
		select count(*) from orders where orderState = "취소대기";
	
	</select>
	
	
	<select id="getcsCount" resultType="int">
	
		select count(*) from cs where groupLayer = 0;
	
	</select>
	
	<select id="getcsAnswerCount" resultType="int">
	
		select count(*) from cs where groupLayer != 0;
	
	</select>
	
	<select id="getboardCount" resultType="int">
	
		select count(*) from board;
	
	</select>
	
	<select id="getboardcommentCount" resultType="int">
	
		select count(*) from boardcomment;
	
	</select>
	
	<update id="buserAdminAllow">
		update user set adminAllow = 1 where uid = #{uid};
	</update>
	
	<delete id="removeuser">
		<![CDATA[
			delete from user
			where
			uid=#{uid}
		]]>
	</delete>
	
	<!-- 탈퇴한 회원을 탈퇴한 회원 테이블에 등록 -->
	<insert id="insertDeleteusertable" parameterType="memberVO">
	
		insert into userdelete(uid, userId, userPwd, userName, userBirth, userGender, userType, userPoint, userPhoneNumber, zipcode, roadAddress, jibunAddress, extraAddress, companyName, businessNumber, joinDate)
		values(#{uid}, #{userId}, #{userPwd}, #{userName}, #{userBirth}, #{userGender}, #{userType}, #{userPoint}, #{userPhoneNumber}, #{zipcode}, #{roadAddress}, #{jibunAddress}, #{extraAddress}, #{companyName}, #{businessNumber}, #{joinDate})
	
	</insert>
	
	
	<!-- 관리자가 주문목록에서 특정 주문 검색 -->
	<select id="FindAdminOrderList" resultMap="OrdercartResult">
	
		 <![CDATA[
		select * from orders
	]]>
		 	<where>
		 	
		 	orderState = "취소대기" AND ordersNO = #{search} order by creDate DESC;
		 	
		
			</where>
	</select>
	
	
	<select id="FindAdminOrdergoodsList" resultMap="OrderGoodsResult">

	<![CDATA[
	SELECT *
	FROM (SELECT og.ordersNO, o.uid, og.goodsId, og.goodsQty, og.goodsPrice, og.goodsName, og.totalPrice, og.cartcheckin, og.cartcheckout, o.ordererName, 
	o.ordererPhoneNumber, o.usePoint, o.savePoint, o.finalTotalPrice, og.orderState, o.creDate 
	FROM ordersgoods AS og JOIN orders AS o ON og.ordersNO = o.ordersNO) ad 
	]]>
	<where>
 	ad.orderState = "취소대기" and ordersNO = #{search} order by creDate DESC;	
	</where> 

	</select>
	
	<!-- 관리자 상품 리스트 -->

	
	<select id="adminGoodslistCri" resultType="goodsVO">
	
	select * from goods
	limit #{skip}, #{amount};
	
	</select>
	
	<select id="TotalAdminGoodsList" resultType="int">
	<![CDATA[
	 select count(*) from goods
	]]>
	</select>
	
	<select id="adminGoodsListSearch" resultType="goodsVO">
	
	<![CDATA[
	select * from goods	
	]]>
	<where>	
	goodsId = #{search} OR uid = #{search} OR goodsName = #{search} OR goodsMainCategory = #{search} or companyName = #{search}	 	
	</where>
	</select>
	

	<update id="adminGoodsAllow">
		update goods set adminAllow = 1 where goodsId = #{goodsId}
	</update>
	
	<!-- 관리자 상품 승인 리스트 -->
	<select id="adminGoodslistCri2" resultType="goodsVO">
	
	select * from goods
	WHERE adminAllow = 0
	limit #{skip}, #{amount};
	
	</select>
	
	<!-- 리뷰 삭제  -->
	<delete id="deleteReview" >
	<![CDATA[
			delete from goodreview
			where 
			uid = #{uid}			
	]]>
	</delete>
	
	<select id="TotalAdminGoodsList2" resultType="int">
	<![CDATA[
	 select count(*) from goods
	 WHERE adminAllow = 0
	]]>
	</select>
	
	
	<!-- 관리자 커뮤니티 관련 -->
	<select id="adminCommunitylistCri" resultType="boardVO">
	
	select * from board
	limit #{skip}, #{amount};
	
	</select>
	
	<select id="TotalAdminCommunityList" resultType="int">
	<![CDATA[
	 select count(*) from board
	]]>
	</select>
	
	
	<select id="adminCommunityListSearch" resultType="boardVO">
	
	<![CDATA[
	select * from board
	]]>
	<where>	
	title = #{search} OR articleNO = #{search} OR userName = #{search} OR articleCategory = #{search} 	 	
	</where>
	</select>

	
		<!-- 관리자 리뷰 관련 -->
	<select id="adminReviewListCri" resultType="goodreviewVO">
	
	select * from goodreview
	limit #{skip}, #{amount};
	
	</select>
	
	<select id="TotalAdminReviewList" resultType="int">
	<![CDATA[
	 select count(*) from goodreview
	]]>
	</select>
	
	
	<select id="adminReviewListSearch" resultType="goodreviewVO">
	
	<![CDATA[
	select * from goodreview
	
	where
	uid = #{search} OR goodsId = #{search} OR content = #{search} OR userName = #{search} 	 	
	]]>
	
	</select>

	<!-- 월별 사업자의 총 매출 -->
	<select id="atotalSales" resultType="ordercartVO">
		<![CDATA[
			SELECT SUM(o.finalTotalPrice) AS finalTotalPrice,  date_format(o.creDate, '%Y-%m-%d') AS creDate
			FROM orders o
			WHERE o.orderState="결제완료"
			GROUP BY MONTH(o.credate)
			ORDER BY creDate asc
	 	]]>
	</select>
	
	<!-- 아이디별 월 매출 -->
	<select id="userSales" resultType="ordercartVO">
		<![CDATA[
			SELECT ug.uid as uid, SUM(og.totalPrice) AS finalTotalPrice, date_format(og.creDate, '%Y-%m-%d') AS creDate
			FROM ordersgoods og
			CROSS JOIN (SELECT g.goodsId, g.uid FROM goods g
						WHERE g.uid = #{uid} && g.adminAllow>0) ug
			WHERE ug.goodsId = og.goodsId && og.orderState = "결제완료" 
			GROUP BY ug.uid, MONTH(credate)
			ORDER BY ug.uid ASC
	 	]]>
	</select>
	
	<!-- 사업자 정보 조회  -->
	<select id="bUserInfo" resultType="memberVO">
		<![CDATA[
			SELECT g.uid as uid, g.companyName
			FROM goods g
			cross JOIN (SELECT goodsId FROM ordersgoods) og
			ON g.goodsId = og.goodsId
			GROUP BY g.uid
			ORDER BY g.uid ASC
			LIMIT #{skip}, #{amount}
	 	]]>
	</select>
	
	<select id="aSalesGetTotal" resultType="int">
		<![CDATA[	
			SELECT COUNT(*) over()
			FROM goods g
			cross JOIN (SELECT goodsId FROM ordersgoods) og
			ON g.goodsId = og.goodsId
			GROUP BY g.uid
			LIMIT 1
		]]>
	</select>
	
	<!-- 월별 사업자의 총 매출 -->
	<select id="searchTotalSales" resultType="orderGoodsVO">
		<![CDATA[
			SELECT SUM(og.totalPrice) AS totalPrice, SUM(og.goodsQty) AS goodsQty, date_format(og.creDate, '%Y-%m-%d') AS creDate
			FROM goods g cross join ordersgoods og 
			ON g.goodsId = og.goodsId
			WHERE (g.uid = #{search} or g.companyName = #{search} or g.goodsMainCategory = #{search}) && og.orderState = "결제완료"
			GROUP BY MONTH(creDate)
			ORDER BY creDate asc
	 	]]>
	</select>
	
	<!-- 아이디별 월 매출 -->
	<select id="searchGoodsSales" resultType="orderGoodsVO">
		<![CDATA[
			SELECT og.goodsId, og.goodsName, SUM(og.totalPrice) AS totalPrice, date_format(og.creDate, '%Y-%m-%d') AS creDate
			FROM goods g cross join ordersgoods og 
			ON g.goodsId = og.goodsId
			WHERE (g.uid = #{search} or g.companyName = #{search} or g.goodsMainCategory = #{search}) && og.orderState = "결제완료"
			GROUP BY og.goodsId, MONTH(creDate)
			ORDER BY g.uid ASC
	 	]]>
	</select>
	
	<!-- 1:1문의  -->
	
	<!-- 페이징 처리한 목록 -->
	<select id="listPageQna" resultType="csVO">
	 <![CDATA[
		select * 
		from cs
		order by originNo desc, groupOrd asc, groupLayer asc, writeDate desc
		limit #{skip},#{amount}	 
		]]>
	</select>
		
	<select id="getQnaList"  parameterType="String" resultType="csVO" >
		<![CDATA[
			select * from cs 
			where uid= #{uid}
			order by  originNo desc, groupOrd asc,  groupLayer asc, writeDate desc
			
		]]>
	</select>

		
	<select id="detailQna" resultType="csVO" >
	<![CDATA[
			SELECT csNO, writer, title, txtContent, writeDate, originNo, groupLayer
			from cs 
			where csNO= #{csNO}
		]]>
	</select>
	
	<delete id="deleteQna" parameterType="int">
    <![CDATA[
      DELETE FROM cs WHERE csNO = #{csNO} 
	   ]]>
	</delete>
	
	<select id="qnaTotal" resultType="int">
	<![CDATA[	
		select count(*) from cs
	]]>
	</select>
		
	
	<!-- 답글 -->
	
	<!-- 그룹번호 조회 -->
	<select id="readOriginNo" resultType="int">
		select originNo
		from cs
		where csNO=#{csNO}
	</select>
	
	<!-- 계층 정보 조회 -->
	<select id="readGroupLayer" resultType="int">
		select groupLayer
		from cs
		where csNO=#{csNO}
	</select>
	
	<!-- 순서번호 Max 조회 -->
	<select id="maxGroupOrd" resultType="int">
		select max(groupOrd)
		from cs
	</select>
	
	<!-- 답글 순서 수정 -->
    <update id="updateOriginNo">
		update cs
		set originNo=#{originNo}
		where csNO=#{csNO}
	</update>
    
    <!-- 답글 등록 -->
    <insert id="insertReply" parameterType="csVO">
        INSERT INTO cs ( uid, originNo, groupOrd, groupLayer,  title, txtContent, writeDate)
        			VALUES (#{uid}, #{originNo}, #{groupOrd}, #{groupLayer},  #{title}, #{txtContent}, NOW() )
  	</insert>
  	
  	
  	<!-- 공지사항 -->
	<select id="selectAllNoticeList" resultType="noticeVO">
	 <![CDATA[
		select noticeNO, title, content, uid, notice_category, regDate, view_cnt
		from notice
		order BY regDate DESC	 
		]]>
	</select>
	
	<!-- 페이징 처리한 목록 -->
	<select id="listPage" resultType="noticeVO">
	 <![CDATA[
		select *
		from notice
		order BY noticeNO desc, regDate DESC
		limit #{skip},#{amount}	 
		]]>
	</select>


	<select id="noticeTotal" resultType="int">
	<![CDATA[	
		select count(*) from notice
	]]>
	</select>
	
	
	<insert id="noticeWrite" parameterType="noticeVO" >
	 <![CDATA[
		insert into notice(noticeNO, uid, notice_category, title, content )
		values(#{noticeNO}, #{uid}, #{notice_category}, #{title}, #{content})
		order by noticeNO desc
		]]>
	</insert>
	
	<select id="noticeSelect"  resultType="noticeVO" >
	<![CDATA[
		select *
		from notice
		where noticeNO = #{noticeNO}
		]]>
	</select>
	
	<update id="noticeUpdate" parameterType="noticeVO">
		update notice
		set title = #{title}, 
			content = #{content},
			regDate=now()
		where noticeNO = #{noticeNO}
	</update>
	
	<delete id="noticeDelete" parameterType="int">
	<![CDATA[
		DELETE FROM notice WHERE noticeNO= #{noticeNO}
	 ]]>
	</delete>
	
	<update id="updateView" parameterType="noticeVO">
	<![CDATA[
		update notice set
		view_cnt = view_cnt+1
		where noticeNO = #{noticeNO}
	 ]]>
	</update>
	
	
	<!-- FAQ -->
	<select id="selectAllFaqList"  parameterType="String" resultType="faqVO">
	 <![CDATA[
		select faq_no, faq_title, faq_date, faq_content
		from faq
		]]>
	</select>
	
	<insert id="faqWrite"  parameterType="faqVO">
	 <![CDATA[
		insert into faq(faq_no, uid, faq_title, faq_content, faq_date)
		values(#{faq_no}, #{uid}, #{faq_title}, #{faq_content}, #{faq_date})
		order by noticeNO desc
		]]>
	</insert>
	
	<select id="faqSelect" resultType="faqVO" >
	<![CDATA[
			SELECT faq_no, faq_title, faq_content, faq_date
			from faq 
			where faq_no= #{faq_no}
		]]>
	</select>
	
	<update id="faqUpdate" >
		<![CDATA[
		update faq 
		set faq_title = #{faq_title}, 
			faq_content = #{faq_content},
			faq_date = now()
		where faq_no = #{faq_no}
		]]>
	</update>
	
	<delete id="faqDelete" parameterType="int">
		<![CDATA[
		DELETE FROM faq WHERE faq_no=#{faq_no}
		]]>
	</delete>
	
	<!--관리자가 회원의 포인트 이력 조회할때 쿼리 -->
	<select id="adminPointHistory" resultMap="adminPointHistoryResult">
	
		SELECT ph.ordersNO, ph.uid, u.userId, u.userName, ph.usePoint, ph.savePoint, u.userPoint, ph.creDate FROM pointhis AS ph 
		JOIN user AS u ON u.uid = ph.uid order by ph. creDate DESC limit #{skip}, #{amount};
	
	</select>
	
	
	<!-- 전체 포인트 이력 수(페이징) -->
	<select id="totalPointHistory" resultType="int">
	
		SELECT COUNT(*) FROM
		(SELECT ph.ordersNO, ph.uid, u.userId, u.userName, ph.usePoint, ph.savePoint, u.userPoint, ph.creDate FROM pointhis AS ph 
		JOIN user AS u ON u.uid = ph.uid) tp;
	
	</select>
	
	
	<!-- 특정 사용자 포인트 이력 조회 -->
	<select id="findpointHistory" resultMap="adminPointHistoryResult">
	
		 <![CDATA[
		SELECT ph.ordersNO, ph.uid, u.userId, u.userName, ph.usePoint, ph.savePoint, u.userPoint, ph.creDate FROM pointhis AS ph 
		JOIN user AS u ON u.uid = ph.uid	
	]]>
		 	<where>
		 		ph.ordersNO = #{search} OR ph.uid = #{search} OR u.userId = #{search} OR u.userName = #{search} order by ph.creDate;
			</where>
	</select>
	
	<!--관리자 댓글 목록 조회-->
	<select id="adminCommentList" resultMap="boardCommentResult">
	
		select * from boardcomment order by regDate DESC limit #{skip}, #{amount};
	
	</select>
	
	<!-- 관리자 댓글 전체 수(페이징용) -->
	<select id="adminTotalCommentPage" resultType="int">
	
		select count(*) from boardcomment;
	
	</select>
</mapper>